" vim: fdm=marker:
set nocompatible

" vundle {{{
" vundle should be on top of vimrc
filetype off " required by vundle
" http://github.com/gmarik/vundle.git
set rtp+=~/.vim/vundle.git/
call vundle#rc()

Bundle 'Valloric/YouCompleteMe'
Bundle 'scrooloose/syntastic'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'godlygeek/tabular'
Bundle 'mattn/emmet-vim'
Bundle 'sukima/xmledit'
Bundle 'othree/html5.vim'
Bundle 'SirVer/ultisnips'
" }}}

filetype on
filetype indent on
filetype plugin on
syntax on

" Editing and Encoding {{{
set smarttab
set softtabstop=8
set autoindent

if has('win32') || has('win64') || has('win32unix')
	set encoding=cp936
else
	set encoding=utf-8
endif
" http://blog.sina.com.cn/s/blog_5562534d0100000j.html
" text not garbled with this option ;D
set fileencodings=utf-8,gb18030,utf-16,big5
set fileencoding=utf-8
" allow backspacing over everything in insert mode
" gvim need this...
set backspace=indent,eol,start
set incsearch

" case in C should be indented as the same level as switch
set cinoptions+=:0,l1
"}}}

" UI setup {{{
" ========
set showcmd
set showmode
" always show tab line
set showtabline=2

set listchars=tab:>\ 
"set list

set nu
set foldcolumn=2

set ruler
set rulerformat=%m\ %2c,%2v\ \ \ \ %p%%

" always show status line
set laststatus=2
" right part of the status line.
set statusline=%m%r
" left part of the status line.
set statusline+=%=
" show the cursor position.
set statusline+=%-14.(%l,%2v%)\ %P
"hi! User1  ctermfg=red

" 貌似即使是全角的双引号在 vim 里始终是当做一个英文字母宽度显示的，所以在这里
" 设置成 double 反而会出问题…
set ambiwidth=single

if has('gui_running')
	colorscheme dark_light256
elseif &term =~ 'xterm' || &term =~ 'screen'
	set t_Co=256
	colorscheme dark_light256
endif
if has('win32') || has('win64') || has('win32unix')
	set guifont=Consolas:h15:cDEFAULT
endif
"colorscheme inkpot
"colorscheme miko
"set background=dark
set hlsearch

" konsole in KDE4
" http://ikde.org/%E5%BA%94%E7%94%A8/konsole-vim-%E5%85%89%E6%A0%87%E5%BD%A2%E7%8A%B6%E9%9A%8F%E6%A8%A1%E5%BC%8F%E5%8F%98%E6%8D%A2/
if $KONSOLE_PROFILE_NAME != ''
	let &t_SI = "\<Esc>]50;CursorShape=1;BlinkingCursorEnabled=true\x7"
	let &t_EI = "\<Esc>]50;CursorShape=0;BlinkingCursorEnabled=false\x7"
endif

let g:tagbar_left = 1
let g:tagbar_compact = 1
let g:tagbar_width = 25
"}}}

" Mapping {{{
" =======
imap <F5> <ESC>:w<CR>a
nmap <F5> :w<CR>

nmap <F2> :setlocal spell spelllang=en<CR>
nmap <F3> :setlocal nospell<CR>

nmap <C-Right> gt
nmap <C-Left> gT
imap <C-Right> <ESC>gta
imap <C-Left> <ESC>gTa

" make cs to clean up search
nmap cs :let @/=""<CR>

" press <F4> to start a menu
source $VIMRUNTIME/menu.vim
set wildmenu
set cpo-=<
set wcm=<C-Z>
map <F4> :emenu <C-Z>

map <Up> gk
map <Down> gj
inoremap ,  ,<Space>
"inoremap ,, ,
"}}}

" Folding {{{
" =======
" Enable folding, but by default make it act like folding is off, because
" folding is annoying in anything but a few rare cases

set foldenable " Turn on folding
"set foldlevel=100 " Don't autofold anything (but I can still fold manually)
set foldopen-=search " don't open folds when you search into them
set foldopen-=undo " don't open folds when you undo stuff
set foldopen-=block " don't open folds when you undo stuff
set foldopen-=insert " don't open folds when you undo stuff
set foldlevelstart=99 " don't open folds when you undo stuff
"}}}

" Local Variables {{{
" ===============
" add po translate info, used by the po.vim script:
let g:po_translator = 'Grissiom <chaos.proton@gmail.com>'
let g:po_lang_team  = 'zh_CN <kde-china@kde.org>'
let g:po_msgfmt_args = '-cvv --check-accelerators=\&'

" Tag list configurations:
" http://vim-taglist.sourceforge.net
"let Tlist_Auto_Open = 1
let Tlist_Exit_OnlyWindow = 1
let Tlist_Auto_Highlight_Tag = 1
let Tlist_Process_File_Always = 1
"}}}

" Misc {{{
" Hold Shift when you want to copy/paste with X.
set mouse=a

" make Chinese text format available
set formatoptions+=mM

set smartcase

set completeopt-=preview

set backupskip+=',/etc/rc.d/*,'

" Show trailing whitespace and spaces before tabs
hi link localWhitespaceError Error
au Syntax * syn match localWhitespaceError /\(\zs\%#\|\s\)\+$/ display
au Syntax * syn match localWhitespaceError / \+\ze\t/ display
"}}}

" Ftplugin loading {{{
au BufNewFile,BufRead *.tdl set ft=tdl
au BufNewFile,BufRead *.fish set ft=fish
au BufNewFile,BufRead *.dox set ft=doxygen
au BufNewFile,BufRead *.md set ft=markdown
au BufNewFile,BufRead *.md set textwidth=80
au BufNewFile,BufRead *.S set ft=armasm
" }}}

"let g:vimim_cloud = 'sougou'
"let g:vimim_toggle = 'pinyin'
imap <C-k>  <C-_>

" syntastic {{{
autocmd BufEnter * sign define dummy
autocmd BufEnter * execute 'sign place 99999 line=1 name=dummy buffer=' . bufnr('')
let g:syntastic_ignore_files=['^/usr/include/', '\c\.h$']
let g:ycm_key_list_select_completion = ['<C-j>', '<C-k>']
"let g:ycm_min_num_of_chars_for_completion = 5
"let g:ycm_filetype_whitelist = { 'c': 1, 'cpp': 1, 'py': 1}
" }}}

""" Ultisnips
let g:UltiSnipsExpandTrigger="<c-i>"
let g:UltiSnipsJumpForwardTrigger="<c-i>"
let g:UltiSnipsJumpBackwardTrigger="<c-o>"

"" UltiSnips completion function that tries to expand a snippet. If there's no
"" snippet for expanding, it checks for completion window and if it's
"" shown, selects first element. If there's no completion window it tries to
"" jump to next placeholder. If there's no placeholder it just returns TAB key 
"function! g:UltiSnips_Complete()
    "call UltiSnips_ExpandSnippet()
    "if g:ulti_expand_res == 0
	"if pumvisible()
	    "return "\<C-n>"
	"else
	    "call UltiSnips_JumpForwards()
	    "if g:ulti_jump_forwards_res == 0
	       "return "\<TAB>"
	    "endif
	"endif
    "endif
    "return ""
"endfunction
"au BufEnter * exec "inoremap <silent> " . g:UltiSnipsExpandTrigger . " <C-R>=g:UltiSnips_Complete()<cr>"
